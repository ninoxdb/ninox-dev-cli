name: Run tests
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Cache node modules
        uses: actions/cache@v3
        continue-on-error: true
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - run: npm run test
  integration-tests:
    needs: [unit-tests]
    env:
      CACHE_PATH: ~/.npm
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest', 'ubuntu-latest']
        node_version: [lts/*]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
      - name: Set npm cache path
        if: runner.os == 'Windows'
        run: |
          echo "CACHE_PATH=$env:APPDATA\npm-cache"
          npm config set cache "$env:APPDATA\npm-cache" --global
          echo "CACHE_PATH=$env:APPDATA\npm-cache" >> $env:GITHUB_ENV
      - name: Cache node modules
        uses: actions/cache@v3
        continue-on-error: true
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm ci
      - run: npm run build
      - run: npm run test:integration
    